; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = main

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                                 ENVIRONMENT CHOICE                                   ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Uncomment the env line corresponding to your board and modules required,              ;
;you can also adapt the modules by removing the corresponding lines in the env detail  ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

default_envs = esp32dev-ble-release

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                              ENVIRONMENTS PARAMETERS                                 ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Libraries and parameters shared accross environements                                 ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[libraries]
pubsubclient = PubSubClient@2.8
regexp  =  Regexp@0.1.0
arduinoJson = bblanchon/ArduinoJson@^6.21.3
tzinfo = https://github.com/shogunxam/ezTime.git
;ble = https://github.com/shogunxam/ESP32-BLE-Arduino

[env]
framework = arduino
lib_deps = 
  ${libraries.pubsubclient}
  ${libraries.arduinoJson}
  ${libraries.tzinfo}
;  ${libraries.ble}
build_flags =
  -w ; supress all warnings
monitor_speed = 115200

extra_scripts = 
  pre:./htmlcompress.py

[com]
#arduino-esp32 1.0.5-rc7
esp32_platform = espressif32
#esp32_platform = https://github.com/shogunxam/platform-espressif32.git#13a6a65fda58242ba3e10a7663fe07a2163c9f2f
#esp32_platform = https://github.com/shogunxam/platform-espressif32.git#de37573e5191f868438c4e584c97b5df5930c830
#arduino-esp32 2020 November 15 fix WebServer for Chrome
#esp32_platform = https://github.com/shogunxam/platform-espressif32.git#7b7e106ac498e86cb4b61323b771af3718f3a028

[com-esp]
lib_deps =
  ${env.lib_deps}
build_flags =
  ${env.build_flags}
  -DMQTT_MAX_PACKET_SIZE=1024

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                                 ENVIRONMENTS LIST                                    ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;List of environments that can be build                                                ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;RELEASE ENVIRONMENT
[env:esp32dev-ble-release]
;extra_scripts =
;  pre:htmlcompress.py
platform = ${com.esp32_platform}
board = esp32dev
board_build.partitions = min_spiffs.csv
build_type = release
lib_deps =
  ${com-esp.lib_deps}
build_flags = 
  ${com-esp.build_flags}
  '-DCORE_DEBUG_LEVEL=0'

;DEBUG ENVIRONMENT
[env:esp32dev-ble-debug]
;extra_scripts =
;  pre:htmlcompress.py
platform = ${com.esp32_platform}
board = esp32dev
board_build.partitions = min_spiffs.csv
build_type = debug
lib_deps =
  ${com-esp.lib_deps}
build_flags = 
  ${com-esp.build_flags}
  '-DDEBUG_SERIAL'
  '-DDEBUG'
  ;ENABLE for loglevel info
  '-DCORE_DEBUG_LEVEL=0'
  ;ENABLE for loglevel debug
  ;'-DCORE_DEBUG_LEVEL=5'
  ;'-DBOARD_HAS_PSRAM=TRUE'

[env:esp32dev-ble-fhem-release]
;extra_scripts =
;  pre:htmlcompress.py
platform = ${com.esp32_platform}
board = esp32dev
board_build.partitions = min_spiffs.csv
build_type = release
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.regexp}
build_flags = 
  ${com-esp.build_flags}
  '-DUSE_MQTT=false'
  '-DUSE_FHEM_LEPRESENCE_SERVER=true'
  '-DCORE_DEBUG_LEVEL=0'

[env:esp32dev-ble-fhem-debug]
;extra_scripts =
;  pre:htmlcompress.py
platform = ${com.esp32_platform}
board = esp32dev
board_build.partitions = min_spiffs.csv
build_type = debug
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.regexp}
build_flags = 
  ${com-esp.build_flags}
  '-DUSE_MQTT=false'
  '-DUSE_FHEM_LEPRESENCE_SERVER=true'
  '-DCORE_DEBUG_LEVEL=0'
  '-DDEBUG_SERIAL'
  '-DDEBUG'
  '-DconfigUSE_MALLOC_FAILED_HOOK=1'
  '-DconfigCHECK_FOR_STACK_OVERFLOW=1'
